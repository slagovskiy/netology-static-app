name: Docker CI/CD Pipeline

on:
  push:
    branches:
      - main
    tags:
      - '*'


jobs:
  build_and_publish_docker_image:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG: ${{ steps.set_tag.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Determine Docker tag
        id: tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            # Если это тег, используем его имя (удаляем 'refs/tags/')
            echo "DOCKER_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            # Если это коммит без тега, используем первые 8 символов SHA
            echo "DOCKER_TAG=${GITHUB_SHA:0:8}" >> $GITHUB_ENV
          fi
          echo "Using tag: $DOCKER_TAG"
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: ${{ secrets.DOCKER_USERNAME }}/netology-static-app:${{ env.DOCKER_TAG }}
          push: true

  deploy_to_kubernetes:
    # Выполняется только при наличии тега
    if: startsWith(github.ref, 'refs/tags')
    needs: build_and_publish_docker_image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install YC CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          yc config set token ${{ secrets.YC_OAUTH_TOKEN }}
          yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
          yc config set folder-id ${{ secrets.YC_FOLDER_ID }}

      - name: Download kubeconfig
        run: |
          yc managed-kubernetes cluster get-master-kubeconfig ${{ secrets.KUBE_CLUSTER_NAME }} > kubeconfig.yaml

      - name: Replace placeholders in deployment.yaml
        run: |
          sed -i.bak "s/TEMPLATE_USERNAME/${{ secrets.DOCKER_USERNAME }}/g" deployment.yaml
          sed -i.bak "s/TEMPLATE_TAG/${{ env.DOCKER_TAG }}/g" deployment.yaml

      - name: Apply Kubernetes Manifest
        run: |
          kubectl apply -f deployment.yaml --kubeconfig=kubeconfig.yaml
